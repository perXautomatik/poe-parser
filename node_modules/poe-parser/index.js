var request = require("request");
var jsdom = require("jsdom");

var price_names = ["~b/o", "~c/o"];

/* Can use default DOM api */
function getItemPrice(node) {
	return node.nextSibling.innerHTML;
}

function hasPrice(text) {
	if (text === undefined || text === null) {
		return false;
	}

	if (text.length < 4) {
		return false;
	}

	var i,
		has = false;

	for (i = 0; i < price_names.length; i += 1) {
		if (text.indexOf(price_names[i]) > -1) {
			has = true;
			break;
		}
	}

	return has;
}

function getThreadSource(scripts) {
	var i,
		raw_data,
		result;

	for (i = 0; i < scripts.length; i += 1) {
		if (scripts[i].text !== undefined || scripts[i].text !== null) {

			raw_data = scripts[i].text.split("function(R) { (new R(");
			if (raw_data.length > 1) {
				break;
			}

		}
	}

	raw_data = raw_data[1].split(")).run")[0];

	return JSON.parse (raw_data);
}

function buildThread(jQuery) {
	var i,
		postContent,
		source,
		items,
		text,
		prices = [];

	postContent = jQuery(".content").first();
	items = postContent.find(".itemContentLayout");

	for (i = 0; i < items.length; i += 1) {
		text = getItemPrice(items.get(i));
		if (hasPrice(text)) {
			prices.push(text);
		} else {
			prices.push(null);
		}
	}

	source = getThreadSource(jQuery("script"));

	for (i = 0; i < prices.length; i += 1) {
		source[i].price = prices[i];
	}

	return source;
}

/*
* @done_func function (response, content) { ... }
*/
exports.parseThread = function(url, done_func) {
	var content;

	request(url, function(error, response, body) {
		if (error || response.statusCode !== 200) {
			return 0;
		}

		jsdom.env(
			body,
			["http://code.jquery.com/jquery.js"],
			function (errors, window) {
				content = buildThread(window.$);
				if (done_func !== undefined || done_func !== null) {
					done_func (responce, content);
				}
			}
		);

	});

	return 0;
};

exports.parsePosts = function (url, done_func) {

};
